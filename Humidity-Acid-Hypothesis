```{r message=FALSE, warning=FALSE}
#load libraries
library(readr)
library(dplyr)
library(lubridate)
library(ggplot2)

#Environmental Variables
Sys.setenv(TZ = "America/Chicago")
```
```{r message=FALSE}
#load raw csv file
file_locat <- "C:\\Users\\astachowicz\\Documents\\Research\\Connection between Humidity and Baths\\" # nolint
raw_atmos_csv <- read_csv(paste0(file_locat, "tblATMOSPHERE.csv")) # nolint
raw_sg_csv <- read_csv(paste0(file_locat, "tblSPECIFICGRAVITY.csv"))

#prepare column heads
colnames(raw_sg_csv) = gsub(" ", "_", colnames(raw_sg_csv))
colnames(raw_sg_csv) = gsub("\\.", "", colnames(raw_sg_csv))
colnames(raw_atmos_csv) = gsub(" ", "_", colnames(raw_atmos_csv))
colnames(raw_atmos_csv) = gsub("\\.", "", colnames(raw_atmos_csv))

#ready columns, correct line types
#atmosphere, group by date, avg rel. humid
atmos_csv <- raw_atmos_csv %>%
    rename("Temp" = 5) %>%
    select(-ID, -Time) %>%
    mutate(Date = mdy(Date))
atmos_csv$Rel_Humidity <- as.numeric(gsub("\\%", "", atmos_csv$Rel_Humidity))
atmos_csv %>%
    group_by(Date) %>%
    summarise(Rel_Humidity = mean(Rel_Humidity))



#specific gravity, average EP2500 across all lines
sg_csv <- raw_sg_csv %>%
    rename("Specific_Gravity" = 7) %>%
    select(Date, Time, Chemical, Line, Specific_Gravity) %>%
    mutate(Date = mdy(Date)) %>%
    filter(Chemical == 2 & Date > min(atmos_csv$Date)) %>%
    select(-Chemical) %>%
    group_by(Date) %>%
    summarise(Specific_Gravity = mean(Specific_Gravity), .groups = "keep")

#row bind by date (LEFT JOIN)
sg_atmos_join <- merge(sg_csv, atmos_csv,
    by.x = "Date",
    by.y = "Date")

#organize by month
monthly_sg_atmos <- sg_atmos_join %>%
    group_by(month(Date)) %>%
    summarise(Specific_Gravity = mean(Specific_Gravity),
        Rel_Humidity = mean(Rel_Humidity)) %>%
    rename("Date" = 1) %>%
    mutate(mon = month.abb[Date]) %>%
    arrange(Date)

#Find necessary humidity range to keep best keep SG > 1.67
req_hum_range <- sg_atmos_join %>%
    filter(Specific_Gravity >= 1.67)
nrow(req_hum_range)

#remove outliers
quartiles <- quantile(req_hum_range$Rel_Humidity,
    probs = c(.25, .75),
    na.rm = TRUE)
req_humIQR <- IQR(req_hum_range$Rel_Humidity)
lowerQ <- quartiles[1] - 1.5 * req_humIQR
upperQ <- quartiles[2] + 1.5 * req_humIQR
data_no_outlier <- req_hum_range %>%
    subset(Rel_Humidity > lowerQ & Rel_Humidity < upperQ)

#find 99.7% confidence interval
mu_outlierless <- mean(data_no_outlier$Rel_Humidity)
upper2SD <- mu_outlierless + 3 * sd(data_no_outlier$Rel_Humidity, na.rm = TRUE)
upper2SD

#how often did the SG break 1.70 g/mL?
bar_count <- req_hum_range %>%
    filter(Specific_Gravity >= 1.70)
nrow(bar_count)

#generate line graphs to show relationship
viz_graph <- ggplot(data = sg_atmos_join, aes(x = Date,
        y = Specific_Gravity, col = Rel_Humidity)) +
    geom_point(size = 3) +
    scale_y_continuous(limits = c(1.610, 1.71), expand = c(0, 0)) +
    labs(title = "Effect of Humidity on EP Bath Water Concentration",
        y = "Specific Gravity (g/mL)",
        col = "Rel.\nHumidity\n(%)") +
    scale_colour_gradient(low = "#184f18", high = "#4ee64e",
        space = "Lab", guide = "colourbar",
        aesthetics = "colour") +
    theme(aspect.ratio = .85,
        plot.title = element_text(size = 18, hjust = 0.5,
            margin = margin(b = 10), face = "bold"),
        legend.title = element_text(size = 14, hjust = 0.5),
        axis.text = element_text(size = 14),
        axis.text.y = element_text(size = 14),
        axis.title = element_text(size = 14, face = "bold"),
        plot.margin = margin(15, 10, 5, 5, "pt"),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.title.x = element_text(margin = margin(t = 10)))
windows(); viz_graph
ggsave(paste0(format(Sys.Date(), "%b%d%y"), " humidity time.png"))

viz_vs_graph <- ggplot(data = sg_atmos_join, aes(x = Rel_Humidity,
        y = Specific_Gravity, col = Rel_Humidity)) +
    geom_point(size = 3, show.legend = FALSE) +
    scale_colour_gradient(low = "#184f18", high = "#4ee64e",
        space = "Lab", guide = "colourbar",
        aesthetics = "colour") +
    scale_y_continuous(limits = c(1.610, 1.71), expand = c(0, 0)) +
    scale_x_continuous(expand = c(0.01, 0)) +
    geom_smooth(method = "lm", show.legend = FALSE,
        color = "#2b662b", linewidth = 1, alpha = 0.45) +
    labs(title = "Effect of Humidity on EP Bath Water Concentration",
        x = "Rel. Humidity (%)",
        y = "Specific Gravity (g/mL)") +
    theme(aspect.ratio = .8,
        plot.title = element_text(size = 18, hjust = 0.5,
            margin = margin(b = 10), face = "bold"),
        axis.text = element_text(size = 14),
        axis.text.y = element_text(size = 14),
        axis.title = element_text(size = 14, face = "bold"),
        plot.margin = margin(15, 10, 5, 5, "pt"),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.title.x = element_text(margin = margin(t = 10)))
windows(); viz_vs_graph
ggsave(paste0(format(Sys.Date(), "%b%d%y"), " humidity specific grav vs.png"))

bar_season_graph <- ggplot(data = monthly_sg_atmos,
        aes(x = reorder(mon, Date),
        y = Specific_Gravity,
        fill = Rel_Humidity)) +
    geom_bar(stat = "identity", show.legend = TRUE) +
    labs(title = "Seasonal Effect on EP Bath Water Concentration",
        x = "Month",
        y = "Specific Gravity (g/mL)",
        fill = "Rel.\nHumidity\n(%)") +
    coord_cartesian(ylim = c(1.6, 1.71)) +
    theme(aspect.ratio = .8,
        plot.title = element_text(size = 18, hjust = 0.5,
            margin = margin(b = 10), face = "bold"),
        axis.text = element_text(size = 14),
        axis.text.y = element_text(size = 14),
        axis.text.x = element_text(size = 12),
        axis.title = element_text(size = 14, face = "bold"),
        plot.margin = margin(15, 10, 5, 5, "pt"),
        axis.title.y = element_text(margin = margin(r = 10)),
        axis.title.x = element_text(margin = margin(t = 10)))
windows(); bar_season_graph
ggsave(paste0(format(Sys.Date(), "%b%d%y"), " seasonal bargraph.png"))
```